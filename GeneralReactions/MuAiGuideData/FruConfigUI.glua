local DrawFruConfigUI = function(M)
    local drawLine = function()
        GUI:Dummy(1, 8)
        GUI:Separator()
        GUI:Dummy(1, 8)
    end
    local drawLine2 = function()
        GUI:Dummy(1, 1)
        GUI:Text("--------------------------------------")
        GUI:Dummy(1, 3)
    end

    if M.FruConfigUI.open then
        if not M.UI.open then
            M.FruConfigUI.open = false
            return
        end
        -- 全局变量读取
        if not M.ConfigInit then
            M.ConfigInit = true
            --------- P1 雾龙 ---------
            M.FruConfigUI.P1InputStr1 = M.StringJoin(M.Config.FruCfg.JobPos, ",")
            M.FruConfigUI.Input1Changed = false

            --------- P1 雾龙 ---------
            M.FruConfigUI.P1InputStr2 = M.StringJoin(M.Config.FruCfg.FruUtopainSkyPosInfo, ",")
            M.FruConfigUI.Input2Changed = false

            --------- P1 雷火线 ---------
            M.FruConfigUI.P1InputStr3 = M.StringJoin(M.Config.FruCfg.FruLightFirePriority, ",")
            M.FruConfigUI.Input3Changed = false
            M.FruConfigUI.BluePos = { "B", "D", "3", "4" }
            M.FruConfigUI.FixInputRight = true
            M.FruConfigUI.MarkInputRight = true
        end
        GUI:SetNextWindowSize(200, 0, GUI.SetCond_Appearing)
        GUI:SetNextWindowPos(M.FruConfigUI.x, M.FruConfigUI.y, GUI.SetCond_Appearing)
        M.FruConfigUI.visible, M.FruConfigUI.open = GUI:Begin("MuAiGuide Fru Setting", M.FruConfigUI.open)
        if M.FruConfigUI.visible then
            GUI:SetNextWindowPos(M.FruConfigUI.x, M.FruConfigUI.y, GUI.SetCond_Appearing)
            if GUI:CollapsingHeader("全局设置") then
                GUI:Dummy(1, 2)
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("1.全局指路方式：") then
                    GUI:Dummy(1, 5)
                    GUI:TextColored(255, 0, 0, 1, "仅为不可设置内容的全局更改，不包含可设置内容！")
                    if GUI:Checkbox("国服     ", M.Config.FruCfg.GuideType == 1) then
                        M.Config.FruCfg.GuideType = 1
                    end
                    GUI:SameLine()
                    if GUI:Checkbox("日基", M.Config.FruCfg.GuideType == 2) then
                        M.Config.FruCfg.GuideType = 2
                    end
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("2.基础站位：") then
                    GUI:Dummy(1, 5)
                    GUI:PushItemWidth(180)
                    GUI:TextColored(255, 0, 0, 1, "※填写方向：C开始逆时针一周")
                    M.FruConfigUI.P1InputStr1, M.FruConfigUI.Input1Changed = GUI:InputText("：八方分散站位",
                            M.FruConfigUI.P1InputStr1,
                            GUI.InputTextFlags_CharsNoBlank)
                    if M.FruConfigUI.Input1Changed then
                        M.Config.FruCfg.JobPos = M.StringSplit(M.FruConfigUI.P1InputStr1, ",")
                    end
                    GUI:PopItemWidth()
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("3.基础点位：") then
                    GUI:Dummy(1, 5)
                    GUI:PushItemWidth(120)
                    GUI:TextColored(255, 0, 0, 1, "※填写方向：C开始逆时针一周")
                    local markPos, markPosChanged = GUI:InputText("：标点", M.StringJoin(M.Config.FruCfg.PosInfo, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if markPosChanged then
                        M.Config.FruCfg.PosInfo = M.StringSplit(markPos, ",")
                    end
                    GUI:PopItemWidth()
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("4.一键设置") then
                    GUI:Dummy(1, 3)
                    GUI:TextColored(255, 255, 0, 1, "※以下均为默认设置，有多种打法的部分仍需要设置！")
                    GUI:Dummy(1, 2)
                    GUI:Button("默认", 125, 20)
                    if GUI:IsItemClicked(0) then
                        M.Config.FruCfg = M.CreateFruDefaultCfg()
                    end
                    GUI:SameLine()
                    GUI:Dummy(20, 2)
                    GUI:SameLine()
                    GUI:Button("日基", 125, 20)
                    if GUI:IsItemClicked(0) then
                        M.FastJapanConfig()
                    end
                    GUI:Button("莫古力", 125, 20)
                    if GUI:IsItemClicked(0) then
                        M.FastMgl()
                    end
                    GUI:SameLine()
                    GUI:Dummy(20, 2)
                    GUI:SameLine()
                    GUI:Button("莫灵喵", 125, 20)
                    if GUI:IsItemClicked(0) then
                        M.Info("开发中，敬请期待！")
                    end
                    GUI:TreePop()
                    GUI:Dummy(1, 2)
                end
            end
            if GUI:CollapsingHeader("P1.绝命战士") then
                GUI:Dummy(1, 2)
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("1.雾龙") then
                    GUI:Dummy(1, 5)
                    GUI:TextColored(255, 0, 0, 1, "※填写方向：C开始逆时针一周")
                    GUI:PushItemWidth(180)
                    M.FruConfigUI.P1InputStr2, M.FruConfigUI.Input2Changed = GUI:InputText("：雾龙八方分散",
                            M.FruConfigUI.P1InputStr2,
                            GUI.InputTextFlags_CharsNoBlank)
                    if M.FruConfigUI.Input2Changed then
                        M.Config.FruCfg.FruUtopainSkyPosInfo = M.StringSplit(M.FruConfigUI.P1InputStr2, ",")
                    end
                    GUI:PopItemWidth()
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("2.双分组") then
                    GUI:Dummy(1, 5)
                    GUI:TextColored(255, 255, 0, 1, "※含优先级设置，如高换反着写即可")
                    GUI:PushItemWidth(50)
                    local inputGroupFall, inputGroupFallDownChanged = GUI:InputText(": 补位",
                            M.StringJoin(M.Config.FruCfg.CatchTwoDownFall, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if inputGroupFallDownChanged then
                        M.Config.FruCfg.CatchTwoDownFall = M.StringSplit(inputGroupFall, ",")
                    end
                    GUI:PushItemWidth(90)
                    local inputGroupUp, inputGroupUpChanged = GUI:InputText(": 去上  ",
                            M.StringJoin(M.Config.FruCfg.CatchTwoUp, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    GUI:SameLine()
                    if inputGroupUpChanged then
                        M.Config.FruCfg.CatchTwoUp = M.StringSplit(inputGroupUp, ",")
                    end
                    local inputGroupDown, inputGroupDownChanged = GUI:InputText(": 去下",
                            M.StringJoin(M.Config.FruCfg.CatchTwoDown, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if inputGroupDownChanged then
                        M.Config.FruCfg.CatchTwoDown = M.StringSplit(inputGroupDown, ",")
                    end
                    GUI:PopItemWidth()
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("3.雷火线") then
                    GUI:Dummy(1, 5)
                    GUI:PushItemWidth(180)
                    M.FruConfigUI.P1InputStr3, M.FruConfigUI.Input3Changed = GUI:InputText(": 优先级", M.FruConfigUI
                                                                                                        .P1InputStr3,
                            GUI.InputTextFlags_CharsNoBlank)
                    if M.FruConfigUI.Input3Changed then
                        M.Config.FruCfg.FruLightFirePriority = M.StringSplit(M.FruConfigUI.P1InputStr3, ",")
                    end
                    drawLine2()
                    GUI:PopItemWidth()
                    GUI:BulletText("站位方向：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(40, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("上下", M.Config.FruCfg.FruLightFireDir == 1) then
                        M.Config.FruCfg.FruLightFireDir = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("左右", M.Config.FruCfg.FruLightFireDir == 2) then
                        M.Config.FruCfg.FruLightFireDir = 2
                    end
                    drawLine2()
                    GUI:BulletText("处理方式：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(40, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("上下互换  ", M.Config.FruCfg.FruLightFireType == 1) then
                        M.Config.FruCfg.FruLightFireType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(10, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("闲人固定", M.Config.FruCfg.FruLightFireType == 2) then
                        M.Config.FruCfg.FruLightFireType = 2
                    end
                    if M.Config.FruCfg.FruLightFireType == 1 then
                        drawLine2()
                        GUI:BulletText("闲人站位：")
                        GUI:Dummy(1, 2)
                        GUI:TextColored(0, 255, 0, 1, "※左上、右上、左下、右下分别对应几号闲人")
                        GUI:Dummy(1, 2)
                        GUI:PushItemWidth(70)
                        local restPos, restPosChanged = GUI:InputText("：顺序站位",
                                M.StringJoin(M.Config.FruCfg.FruLightFireRestPos, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        GUI:PopItemWidth()
                        if restPosChanged then
                            M.Config.FruCfg.FruLightFireRestPos = M.StringSplit(restPos, ",")
                        end
                    end
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("4.踩塔") then
                    GUI:Dummy(1, 5)
                    GUI:BulletText("踩塔方式：")
                    GUI:Dummy(0, 3)
                    if GUI:Checkbox("小学塔", M.Config.FruCfg.TakeTowerType == 1) then
                        M.Config.FruCfg.TakeTowerType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(13, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("固定/补位", M.Config.FruCfg.TakeTowerType == 2) then
                        M.Config.FruCfg.TakeTowerType = 2
                    end
                    GUI:SameLine()
                    GUI:Dummy(13, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("日基塔", M.Config.FruCfg.TakeTowerType == 3) then
                        M.Config.FruCfg.TakeTowerType = 3
                    end
                    drawLine2()
                    GUI:BulletText("成员设置：")
                    if M.Config.FruCfg.TakeTowerType == 1 then
                        GUI:PushItemWidth(140)
                        local fallInput, fallInputChanged = GUI:InputText("顺序依次补位踩塔",
                                M.StringJoin(M.Config.FruCfg.FallTowerOrder, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if fallInputChanged then
                            M.Config.FruCfg.FallTowerOrder = M.StringSplit(fallInput, ",")
                        end
                        GUI:PopItemWidth()
                    elseif M.Config.FruCfg.TakeTowerType == 2 then
                        GUI:Dummy(1, 2)
                        GUI:TextColored(0, 255, 0, 1, "※第一个是固定，第二个是补位")
                        GUI:Dummy(1, 2)
                        GUI:PushItemWidth(45)
                        local inputFixUp, inputFixUpChanged = GUI:InputText(":上塔 ",
                                M.StringJoin(M.Config.FruCfg.FixTowerUp, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputFixUpChanged then
                            M.Config.FruCfg.FixTowerUp = M.StringSplit(inputFixUp, ",")
                        end
                        GUI:SameLine()
                        local inputFixMid, inputFixMidChanged = GUI:InputText(":中塔 ",
                                M.StringJoin(M.Config.FruCfg.FixTowerMid, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputFixMidChanged then
                            M.Config.FruCfg.FixTowerMid = M.StringSplit(inputFixMid, ",")
                        end
                        GUI:SameLine()
                        local inputFixDown, inputFixDownChanged = GUI:InputText(":下塔 ",
                                M.StringJoin(M.Config.FruCfg.FixTowerDown, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputFixDownChanged then
                            M.Config.FruCfg.FixTowerDown = M.StringSplit(inputFixDown, ",")
                        end
                        GUI:PopItemWidth()
                    elseif M.Config.FruCfg.TakeTowerType == 3 then
                        GUI:Dummy(1, 2)
                        GUI:TextColored(0, 255, 0, 1, "※对应位置以及优先级")
                        GUI:Dummy(1, 2)
                        GUI:PushItemWidth(65)
                        local inputFixJp, inputFixJpChanged = GUI:InputText(":分别去上中下  ",
                                M.StringJoin(M.Config.FruCfg.JapanTowerFix, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputFixJpChanged then
                            M.Config.FruCfg.JapanTowerFix = M.StringSplit(inputFixJp, ",")
                        end
                        GUI:SameLine()
                        local inputFallJp, inputFallJpChanged = GUI:InputText(":顺序补位 ",
                                M.StringJoin(M.Config.FruCfg.JapanTowerFall, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputFallJpChanged then
                            M.Config.FruCfg.JapanTowerFall = M.StringSplit(inputFallJp, ",")
                        end
                        GUI:PopItemWidth()
                    end
                    GUI:TreePop()
                    GUI:Dummy(1, 2)
                end
            end
            if GUI:CollapsingHeader("P2.希瓦·米特隆") then
                GUI:Dummy(1, 2)
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("1.钻石星辰") then
                    GUI:Dummy(1, 5)
                    GUI:BulletText("换位方式：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(40, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("同组", M.Config.FruCfg.DDChangeType == 1) then
                        M.Config.FruCfg.DDChangeType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("全顺", M.Config.FruCfg.DDChangeType == 2) then
                        M.Config.FruCfg.DDChangeType = 2
                    end
                    drawLine2()
                    GUI:BulletText("滑冰提示：")
                    GUI:Dummy(0, 3)
                    GUI:SameLine()
                    if GUI:Checkbox("TTS  ", M.Config.FruCfg.SkatingHit == 1) then
                        M.Config.FruCfg.SkatingHit = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(15, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("噪音  ", M.Config.FruCfg.SkatingHit == 2) then
                        M.Config.FruCfg.SkatingHit = 2
                    end
                    GUI:SameLine()
                    GUI:Dummy(15, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("关闭", M.Config.FruCfg.SkatingHit == 0) then
                        M.Config.FruCfg.SkatingHit = 0
                    end
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("2.镜中奇遇") then
                    GUI:Dummy(1, 5)
                    GUI:PushItemWidth(95)

                    GUI:BulletText("蓝镜子中间时：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(18, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("远左近右", M.Config.FruCfg.MirrorSameDistanceType == 1) then
                        M.Config.FruCfg.MirrorSameDistanceType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("近左远右", M.Config.FruCfg.MirrorSameDistanceType == 2) then
                        M.Config.FruCfg.MirrorSameDistanceType = 2
                    end
                    drawLine2()
                    GUI:BulletText("远程站位：")
                    GUI:Dummy(0, 3)
                    GUI:TextColored(255, 0, 0, 1, "※面向红镜子，从左到右")
                    GUI:Dummy(0, 3)
                    local inputRange, inputRangeChanged = GUI:InputText(": 远程站位顺序",
                            M.StringJoin(M.Config.FruCfg.MirrorPosRange, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if inputRangeChanged then
                        M.Config.FruCfg.MirrorPosRange = M.StringSplit(inputRange, ",")
                    end
                    drawLine2()
                    GUI:BulletText("近战站位：")
                    GUI:Dummy(0, 3)
                    GUI:TextColored(0, 255, 255, 1, "※第1波站位顺序：背对蓝镜子，从左到右")
                    GUI:Dummy(0, 1)
                    local inputMelee1, inputMelee1Changed = GUI:InputText(": 近战第1波站位顺序",
                            M.StringJoin(M.Config.FruCfg.MirrorPosMelee1, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if inputMelee1Changed then
                        M.Config.FruCfg.MirrorPosMelee1 = M.StringSplit(inputMelee1, ",")
                    end
                    GUI:Dummy(0, 10)
                    GUI:TextColored(255, 0, 0, 1, "※第2波站位顺序：面向红镜子，从左到右")
                    GUI:Dummy(0, 1)
                    local inputMelee2, inputMelee2Changed = GUI:InputText(": 近战第1波站位顺序",
                            M.StringJoin(M.Config.FruCfg.MirrorPosMelee2, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if inputMelee2Changed then
                        M.Config.FruCfg.MirrorPosMelee2 = M.StringSplit(inputMelee2, ",")
                    end

                    GUI:PopItemWidth()
                    GUI:TreePop()
                    GUI:Dummy(1, 2)
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("3.光之暴走") then
                    GUI:Dummy(1, 5)
                    GUI:BulletText("处理方式：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(18, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("田园郡式", M.Config.FruCfg.FruLightRampantType == 1) then
                        M.Config.FruCfg.FruLightRampantType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("新灰9式", M.Config.FruCfg.FruLightRampantType == 2) then
                        M.Config.FruCfg.FruLightRampantType = 2
                    end
                    if M.Config.FruCfg.FruLightRampantType == 1 then
                        drawLine2()
                        GUI:BulletText("优先级：")
                        GUI:Dummy(0, 3)
                        GUI:TextColored(0, 255, 255, 1, "※上边从左到右，然后下面从左到右")
                        GUI:Dummy(0, 3)
                        GUI:PushItemWidth(180)
                        local lrPos, lrPosChanged = GUI:InputText("：光爆优先级",
                                M.StringJoin(M.Config.FruCfg.FruLightRampantOrder, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if lrPosChanged then
                            M.Config.FruCfg.FruLightRampantOrder = M.StringSplit(lrPos, ",")
                        end
                        GUI:PopItemWidth()
                    end
                    GUI:TreePop()
                    GUI:Dummy(1, 2)
                end
            end
            if GUI:CollapsingHeader("P3.暗之巫女") then
                GUI:Dummy(1, 2)
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("1.时间压缩·绝") then
                    GUI:Dummy(1, 5)
                    GUI:BulletText("处理方式：")
                    GUI:Dummy(0, 3)
                    GUI:SameLine()
                    if GUI:Checkbox("灰9式", M.Config.FruCfg.UltimateRelativityType == 1) then
                        M.Config.FruCfg.UltimateRelativityType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("遗迹王国式", M.Config.FruCfg.UltimateRelativityType == 2) then
                        M.Config.FruCfg.UltimateRelativityType = 2
                    end
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("2.地火") then
                    GUI:Dummy(1, 5)
                    if M.Config.FruCfg.GuideType == 1 then
                        GUI:Text("基础方案： ")
                        GUI:Dummy(1, 2)
                        if GUI:Checkbox("左右预站位", M.Config.FruCfg.ApocalypseGroupType == 1) then
                            M.Config.FruCfg.ApocalypseGroupType = 1
                        end
                        GUI:SameLine()
                        if GUI:Checkbox("上下预站位", M.Config.FruCfg.ApocalypseGroupType == 3) then
                            M.Config.FruCfg.ApocalypseGroupType = 3
                        end
                        GUI:SameLine()
                        if GUI:Checkbox("ACT标点", M.Config.FruCfg.ApocalypseGroupType == 2) then
                            M.Config.FruCfg.ApocalypseGroupType = 2
                        end
                        GUI:Dummy(1, 2)
                        if M.Config.FruCfg.ApocalypseGroupType == 1 then
                            GUI:TextColored(0, 255, 255, 1, "※左右预站位，低优先级交换（莫古力）")
                        elseif M.Config.FruCfg.ApocalypseGroupType == 3 then
                            GUI:TextColored(0, 255, 255, 1, "※上下预站位，高优先级交换（日基）")
                        elseif M.Config.FruCfg.ApocalypseGroupType == 2 then
                            GUI:TextColored(0, 255, 255, 1, "※不预站位，ACT标记（莫灵喵）")
                        end

                        drawLine2()
                        GUI:Text("分散方案： ")
                        GUI:Dummy(20, 0)
                        GUI:SameLine()
                        if GUI:Checkbox("车头法", M.Config.FruCfg.ApocalypseType == 1) then
                            M.Config.FruCfg.ApocalypseType = 1
                        end
                        GUI:SameLine()
                        GUI:Dummy(65, 0)
                        GUI:SameLine()
                        if GUI:Checkbox("人群法", M.Config.FruCfg.ApocalypseType == 2) then
                            M.Config.FruCfg.ApocalypseType = 2
                        end
                        GUI:Dummy(20, 0)
                        GUI:SameLine()
                        if GUI:Checkbox("起点法", M.Config.FruCfg.ApocalypseType == 3) then
                            M.Config.FruCfg.ApocalypseType = 3
                        end
                        GUI:SameLine()
                        GUI:Dummy(70, 0)
                        GUI:SameLine()
                        if GUI:Checkbox("日基法", M.Config.FruCfg.ApocalypseType == 4) then
                            M.Config.FruCfg.ApocalypseType = 4
                        end
                        GUI:Dummy(0, 5)
                        if M.Config.FruCfg.ApocalypseType == 1 then
                            GUI:TextColored(0, 255, 255, 1, "※车头固定，其他人去车头顺/逆下一个点")
                        elseif M.Config.FruCfg.ApocalypseType == 2 then
                            GUI:TextColored(0, 255, 255, 1, "※人群固定，车头去人群顺/逆上一个点")
                        elseif M.Config.FruCfg.ApocalypseType == 3 then
                            GUI:TextColored(0, 255, 255, 1, "※地火起点固定，人群去自己起点最近的一个点")
                        elseif M.Config.FruCfg.ApocalypseType == 4 then
                            GUI:TextColored(0, 255, 255, 1, "※日基特殊走法")
                        end

                    else
                        GUI:TextColored(255, 0, 0, 1, "日基地火不可设置！")
                    end
                    GUI:TreePop()
                    GUI:Dummy(1, 2)
                end
            end
            if GUI:CollapsingHeader("P4.光之巫女&暗之巫女") then
                GUI:Dummy(1, 2)
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("1.光暗龙诗：") then
                    GUI:Dummy(0, 3)
                    GUI:BulletText("优先级：")
                    GUI:Dummy(0, 3)
                    GUI:TextColored(0, 255, 255, 1, "※上边从左到右，然后下面从左到右")
                    GUI:Dummy(0, 3)
                    GUI:PushItemWidth(180)
                    local drklPos, drklPosChanged = GUI:InputText("：光暗龙诗站位",
                            M.StringJoin(M.Config.FruCfg.DarkLitOrder, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if drklPosChanged then
                        M.Config.FruCfg.DarkLitOrder = M.StringSplit(drklPos, ",")
                    end
                    GUI:PopItemWidth()
                    drawLine2()
                    GUI:BulletText("四边形交换：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(30, 3)
                    GUI:SameLine()
                    if GUI:Checkbox("左换", M.Config.FruCfg.DarkLitChangeType == 1) then
                        M.Config.FruCfg.DarkLitChangeType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("右换", M.Config.FruCfg.DarkLitChangeType == 2) then
                        M.Config.FruCfg.DarkLitChangeType = 2
                    end
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("2.时间结晶：") then
                    GUI:Dummy(0, 3)
                    GUI:BulletText("优先级：")
                    GUI:Dummy(0, 3)
                    GUI:PushItemWidth(180)
                    local inputP42ProPriority, inputP42ProPriorityChange = GUI:InputText(":BUFF左右优先级",
                            M.StringJoin(M.Config.FruCfg.CrystallizeTimePriority, ","),
                            GUI.InputTextFlags_CharsNoBlank)
                    if inputP42ProPriorityChange then
                        M.Config.FruCfg.CrystallizeTimePriority = M.StringSplit(inputP42ProPriority, ",")
                    end
                    GUI:PopItemWidth()
                    drawLine2()
                    GUI:BulletText("贡品拾取方案： ")
                    GUI:Dummy(0, 3)
                    if GUI:Checkbox("根据BUFF  ", M.Config.FruCfg.CrystallizeTimeType == 1) then
                        M.Config.FruCfg.CrystallizeTimeType = 1
                    end
                    GUI:SameLine()
                    if GUI:Checkbox("ACT标点  ", M.Config.FruCfg.CrystallizeTimeType == 2) then
                        M.Config.FruCfg.CrystallizeTimeType = 2
                    end
                    GUI:SameLine()
                    if GUI:Checkbox("自动摇号", M.Config.FruCfg.CrystallizeTimeType == 3) then
                        M.Config.FruCfg.CrystallizeTimeType = 3
                    end
                    drawLine2()
                    GUI:BulletText("贡品拾取位置： ")
                    GUI:Dummy(0, 3)
                    if M.Config.FruCfg.CrystallizeTimeType == 1 then
                        M.FruConfigUI.FixInputRight = true
                        GUI:PushItemWidth(20)
                        local inputFlame, inputFlameChanged = GUI:InputText(":暗焰 ",
                                M.Config.FruCfg.CrystallizeTimeFix[2460],
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputFlameChanged then
                            if table.contains(M.FruConfigUI.BluePos, inputFlame) then
                                M.Config.FruCfg.CrystallizeTimeFix[2460] = inputFlame
                            else
                                M.FruConfigUI.FixInputRight = false
                            end
                        end
                        GUI:SameLine()
                        local inputConverge, inputConvergeChanged = GUI:InputText(":分摊  ",
                                M.Config.FruCfg.CrystallizeTimeFix[2454],
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputConvergeChanged then
                            if table.contains(M.FruConfigUI.BluePos, inputConverge) then
                                M.Config.FruCfg.CrystallizeTimeFix[2454] = inputConverge
                            else
                                M.FruConfigUI.FixInputRight = false
                            end
                        end
                        GUI:SameLine()
                        local inputIce, inputIceChanged = GUI:InputText(":冰  ", M.Config.FruCfg.CrystallizeTimeFix
                        [2462],
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputIceChanged then
                            if table.contains(M.FruConfigUI.BluePos, inputIce) then
                                M.Config.FruCfg.CrystallizeTimeFix[2462] = inputIce
                            else
                                M.FruConfigUI.FixInputRight = false
                            end
                        end
                        GUI:SameLine()
                        local inputWater, inputWaterChanged = GUI:InputText(":水",
                                M.Config.FruCfg.CrystallizeTimeFix[2461],
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputWaterChanged then
                            if table.contains(M.FruConfigUI.BluePos, inputWater) then
                                M.Config.FruCfg.CrystallizeTimeFix[2461] = inputWater
                            else
                                M.FruConfigUI.FixInputRight = false
                            end
                        end
                        if not M.FruConfigUI.FixInputRight then
                            GUI:TextColored(255, 0, 0, 1, "错误，请检查填写的内容!")
                        end
                        GUI:PopItemWidth()
                    else
                        GUI:SameLine()
                        GUI:TextColored(0, 255, 0, 1, "※攻击1到攻击4标记具体位置")
                        GUI:PushItemWidth(20)
                        local leftStr = M.Config.FruCfg.PosInfo[7]
                        local rightStr = M.Config.FruCfg.PosInfo[3]
                        local rightDownStr = M.Config.FruCfg.PosInfo[2]
                        local leftDownStr = M.Config.FruCfg.PosInfo[8]
                        M.FruConfigUI.MarkInputRight = true
                        GUI:Dummy(0, 5)
                        local inputStrD, DChanged = GUI:InputText(":去[" .. leftStr .. "] ",
                                M.Config.FruCfg.CrystallizeMark["D"], GUI.InputTextFlags_CharsNoBlank)
                        if DChanged then
                            if tonumber(inputStrD) == nil or tonumber(inputStrD) > 4 then
                                M.FruConfigUI.MarkInputRight = false
                            else
                                M.Config.FruCfg.CrystallizeMark["D"] = inputStrD
                            end
                        end
                        GUI:SameLine()
                        GUI:Dummy(120, 0)
                        GUI:SameLine()
                        local inputStrB, BChanged = GUI:InputText(":去[" .. rightStr .. "] ",
                                M.Config.FruCfg.CrystallizeMark["B"], GUI.InputTextFlags_CharsNoBlank)
                        if BChanged then
                            if tonumber(inputStrB) == nil or tonumber(inputStrB) > 4 then
                                M.FruConfigUI.MarkInputRight = false
                            else
                                M.Config.FruCfg.CrystallizeMark["B"] = inputStrB
                            end
                        end
                        GUI:Dummy(0, 5)
                        GUI:Dummy(30, 0)
                        GUI:SameLine()
                        local inputStr4, _4Changed = GUI:InputText(":去[" .. leftDownStr .. "] ",
                                M.Config.FruCfg.CrystallizeMark["4"], GUI.InputTextFlags_CharsNoBlank)
                        if _4Changed then
                            if tonumber(inputStr4) == nil or tonumber(inputStr4) > 4 then
                                M.FruConfigUI.MarkInputRight = false
                            else
                                M.Config.FruCfg.CrystallizeMark["4"] = inputStr4
                            end
                        end
                        GUI:SameLine()
                        GUI:Dummy(40, 0)
                        GUI:SameLine()
                        local inputStr3, _3Changed = GUI:InputText(":去[" .. rightDownStr .. "]",
                                M.Config.FruCfg.CrystallizeMark["3"], GUI.InputTextFlags_CharsNoBlank)
                        if _3Changed then
                            if tonumber(inputStr3) == nil or tonumber(inputStr3) > 4 then
                                M.FruConfigUI.MarkInputRight = false
                            else
                                M.Config.FruCfg.CrystallizeMark["3"] = inputStr3
                            end
                        end
                        if not M.FruConfigUI.MarkInputRight then
                            GUI:TextColored(255, 0, 0, 1, "错误，请检查填写的内容!")
                        end
                        GUI:PopItemWidth()
                    end
                    drawLine2()
                    GUI:BulletText("击退方案：")
                    GUI:Dummy(0, 3)
                    GUI:Dummy(50, 3)
                    GUI:SameLine()
                    if GUI:Checkbox("Y字", M.Config.FruCfg.CrystallizeTimeKnockBack == 1) then
                        M.Config.FruCfg.CrystallizeTimeKnockBack = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(50, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("角落", M.Config.FruCfg.CrystallizeTimeKnockBack == 2) then
                        M.Config.FruCfg.CrystallizeTimeKnockBack = 2
                    end
                    GUI:TreePop()
                    GUI:Dummy(1, 2)
                end
            end
            if GUI:CollapsingHeader("P5.潘多拉·米特隆") then
                GUI:Dummy(1, 1)
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("踩塔方式：") then
                    GUI:Dummy(0, 3)
                    GUI:Dummy(30, 3)
                    GUI:SameLine()
                    if GUI:Checkbox("固定踩塔  ", M.Config.FruCfg.DarkLightWingsTakeTowerType == 1) then
                        M.Config.FruCfg.DarkLightWingsTakeTowerType = 1
                    end
                    GUI:SameLine()
                    GUI:Dummy(20, 0)
                    GUI:SameLine()
                    if GUI:Checkbox("顺序踩塔", M.Config.FruCfg.DarkLightWingsTakeTowerType == 2) then
                        M.Config.FruCfg.DarkLightWingsTakeTowerType = 2
                    end

                    if M.Config.FruCfg.DarkLightWingsTakeTowerType == 1 then
                        GUI:TextColored(0, 255, 255, 1, "※3组人固定去下、左上、右上")
                    elseif M.Config.FruCfg.DarkLightWingsTakeTowerType == 2 then
                        GUI:TextColored(0, 255, 255, 1, "※3组人分别去下、安全半场、危险半场")
                    end

                    GUI:Dummy(0, 3)
                    GUI:PushItemWidth(45)
                    if M.Config.FruCfg.DarkLightWingsTakeTowerType == 1 then
                        local inputDown, inputDownChanged = GUI:InputText("去下，",
                                M.StringJoin(M.Config.FruCfg.DarkLightWings.Down, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputDownChanged then
                            M.Config.FruCfg.DarkLightWings.Down = M.StringSplit(inputDown, ",")
                        end
                        GUI:SameLine()
                        local inputLeft, inputLeftChanged = GUI:InputText("去左上，",
                                M.StringJoin(M.Config.FruCfg.DarkLightWings.Left, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputLeftChanged then
                            M.Config.FruCfg.DarkLightWings.Left = M.StringSplit(inputLeft, ",")
                        end
                        GUI:SameLine()
                        local inputRight, inputRightChanged = GUI:InputText("去右上",
                                M.StringJoin(M.Config.FruCfg.DarkLightWings.Right, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputRightChanged then
                            M.Config.FruCfg.DarkLightWings.Right = M.StringSplit(inputRight, ",")
                        end
                    else
                        local inputDown, inputDownChanged = GUI:InputText("去下，",
                                M.StringJoin(M.Config.FruCfg.DarkLightWings2.Down, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputDownChanged then
                            M.Config.FruCfg.DarkLightWings2.Down = M.StringSplit(inputDown, ",")
                        end
                        GUI:SameLine()
                        local inputLeft, inputLeftChanged = GUI:InputText("安全区，",
                                M.StringJoin(M.Config.FruCfg.DarkLightWings2.Left, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputLeftChanged then
                            M.Config.FruCfg.DarkLightWings2.Left = M.StringSplit(inputLeft, ",")
                        end
                        GUI:SameLine()
                        local inputRight, inputRightChanged = GUI:InputText("危险区",
                                M.StringJoin(M.Config.FruCfg.DarkLightWings2.Right, ","),
                                GUI.InputTextFlags_CharsNoBlank)
                        if inputRightChanged then
                            M.Config.FruCfg.DarkLightWings2.Right = M.StringSplit(inputRight, ",")
                        end
                    end

                    GUI:PopItemWidth()
                    GUI:TreePop()
                end
                drawLine()
                GUI:SetNextTreeNodeOpened(true, GUI.SetCond_Appearing)
                if GUI:TreeNode("绘图设置：") then
                    GUI:Dummy(0, 2)
                    GUI:TextColored(0, 255, 255, 1, "※补充一些绘制")
                    GUI:Dummy(30, 3)
                    GUI:SameLine()
                    M.Config.FruCfg.drawAknMorn = GUI:Checkbox("画分摊", M.Config.FruCfg.drawAknMorn)
                    GUI:SameLine()
                    GUI:Dummy(40, 3)
                    GUI:SameLine()
                    M.Config.FruCfg.drawWinLight = GUI:Checkbox("画左右刀&远近死刑", M.Config.FruCfg.drawWinLight)

                    GUI:Dummy(30, 3)
                    GUI:SameLine()
                    M.Config.FruCfg.drawShit = GUI:Checkbox("画地火", M.Config.FruCfg.drawShit)
                    GUI:SameLine()
                    GUI:Dummy(40, 3)
                    GUI:SameLine()
                    M.Config.FruCfg.drawWinPolarizing = GUI:Checkbox("画挡枪", M.Config.FruCfg.drawWinPolarizing)
                    GUI:TreePop()
                end
            end
            if GUI:CollapsingHeader("特别鸣谢") then
                GUI:TextColored(0, 255, 255, 1, "※顺序不代表排名")
                GUI:Dummy(20, 3)
                GUI:SameLine()
                GUI:Text("megaminx、ppu、Shippo、kaze")
                GUI:Dummy(20, 3)
                GUI:SameLine()
                GUI:Text("Master Lee、String、SEA_Ai、倦")
                GUI:Dummy(20, 3)
                GUI:SameLine()
                GUI:Text("各大挂群群友、DC群友")
            end
        end
        M.SaveConfig()
        GUI:SetWindowSize(350, 0)
        GUI:End()
    end
end
return DrawFruConfigUI
